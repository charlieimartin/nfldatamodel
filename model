import pandas as pd

url = 'https://drive.google.com/uc?id=11P2lTHCZk-Jkfh1LlB2L78QfyZl4SW4k&export=download'

df = pd.read_csv(url)

filtered_df = df[['yardline_100', 'down', 'ydstogo', 'fixed_drive_result']]

filtered_df.to_csv('filtered_file.csv', index=False)

print(filtered_df)

import pandas as pd
import numpy as np
from sklearn.model_selection import train_test_split
from sklearn.linear_model import LinearRegression
from sklearn.metrics import mean_squared_error, r2_score
import matplotlib.pyplot as plt

def map_drive_result(result):
    if result == 'Touchdown':
        return 7
    elif result == 'Field goal':
        return 3
    else:
        return 0

df['points'] = df['fixed_drive_result'].apply(map_drive_result)

data = df[['yardline_100', 'down', 'ydstogo', 'points']]

data = data.dropna()

data['points'].hist(bins=8)
plt.xlabel('Points')
plt.ylabel('Frequency')
plt.title('Distribution of Points')
plt.show()

import seaborn as sns

corr_matrix = data.corr()
sns.heatmap(corr_matrix, annot=True)
plt.show()

X = data[['yardline_100', 'down', 'ydstogo']]
y = data['points']

X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

model = LinearRegression()
model.fit(X_train, y_train)

y_pred = model.predict(X_test)

mse = mean_squared_error(y_test, y_pred)
r2 = r2_score(y_test, y_pred)

print(f"Mean Squared Error: {mse:.2f}")
print(f"R-squared Score: {r2:.2f}")

coefficients = pd.DataFrame({
    'Feature': X.columns,
    'Coefficient': model.coef_
})

print(coefficients)

def predict_expected_points(yardline_100, down, ydstogo):
    input_features = np.array([[yardline_100, down, ydstogo]])
    predicted_points = model.predict(input_features)
    return predicted_points[0]

expected_points = predict_expected_points(yardline_100=80, down=1, ydstogo=10)
print(f"Expected Points: {expected_points:.2f}")
